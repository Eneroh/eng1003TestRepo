NO USING SCANF(); this week, let's go
_____________________________________________________________________________________________________________________
IF FUNCTION TESTING

// if x times y is  not equal to 0, else if x is equal to 1, else if x is equal to 2. Can extend with arguments later

#include <stdio.h>
int main()  {
    int x = 1;
    if(x * y == 0)  {
        // stuff
    } else if(x == 1)   {
        // stuff
    } else if(x == 2)   {
        // stuff
    }
    printf("%d", "%f", x)
}

// if x is greater than 5, print "x is greater than 5". Otherwise print "x is not greater than 5".

#include <stdio.h>
int main()  {
    int x = 4;
    if(x > 5)   {
        printf("x is greater than 5");
    }
    else    {
        printf("x is not greater than 5");
    }
}

// if x is greater than 5 decrement x by 1, otherwise increase x value by 1 and print x value with changes made

#include <stdio.h>
int main()  {
    int x = 6;
    if(x > 5)   {
        x = x - 1;
    }
    else    {
        x = x + 1;
    }
    printf("%d", x);
}
______________________________________________________________________________________________________________________

Beginning of while function testing

// while the x value is greater than 0, decrement by 1 until the number reaches 0 then print x

#include <stdio.h>
int main()  {
    int x = 1000;
    while(x > 0)    {
        x = x - 1;
    }
    printf("%d", x);
}

// To watch the decrementing process (view below)

#include <stdio.h>
int main()  {
    int x = 1000;
    while(x > 0)    {
        x = x - 1;
        printf("%d\n", x);
    }
}
______________________________________________________________________________________________________________________

Artrithmetic Sequence

// Really simple fibonacci sequence but using slightly more code than typical?

#include <stdio.h>

int main()  {
    int xn = 0;
    int xnm1 = 0;
    int xnm2 = 2;
    int count = 0;
    while(count < 10)   {
    printf("%d\n", xn);
    xn = xnm1 + xnm2;
    xnm2 = xnm1;
    xnm1 = xn;
    count++;
    }
}
#include <stdio.h>
// xn = xn-1 + d
// incrementation by 2

int main()  {
    int x1 = 0;
    int x2 = 2;
    int d;
    int xn = 0;
    int count = 0;
    d = x2 - x1;
    while(count < 10) {
        printf("%d\n", xn);
        xn = xn + d;
        count++;
    }
}

// (Same code just done slightly differently)

int main()  {
    int x1 = 0;
    int x2 = 2;
    int xn = x2;
    int xnm1 = x1;
    int d = xn - xnm1;
    int count = 0;
    while(count < 10)   {
        xn = xnm1 + d;
        xnm1 = xn;
        printf("%d\n", xn);
        count++;
    }
}

// Power formula, just annoyingly extended

int main()  {#include <stdio.h>

int main()  {
    int n = 2;
    int x1 = 2;
    int xn = 0;
    int S = 0;
    int count = 0;
    while(count < 10)   {
        printf("%d\n", S);
        S = 0.5*n*(x1 + xn);
        xn = xn + S;
        count++;
    }
}

    //first two in sequence
    float x0 = 1.0;
    float x1 = 2.0;
    int count = 0;

    float xn = x0; // this is our working value
    float xnm1 = x1; // this is our other worker

    // calculate k in the program
    float k = x0 / x1;

    // print the initial values
    printf("%f \n%f \n", x0, x1);


    // print the rest of the first ten numbers - we have already printed two
    count = count + 2;
    while (count < 10)
    {
        xn = k * xnm1;
        printf("%f \n", xn);
        xnm1 = xn;
        count++;
    }
    
#include <stdio.h>

int main()  {
    int n = 2;
    int x1 = 2;
    int xn = 0;
    int S = 0;
    int count = 0;
    while(count < 10)   {
        printf("%d\n", S);
        S = 0.5*n*(x1 + xn);
        xn = xn + S;
        count++;
    }
}
